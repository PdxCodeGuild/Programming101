'''
Programming 101
Unit 5
'''

import random
import string # string module

letters = string.ascii_letters
# print(letters) # abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ

digits = string.digits
# print(digits) # '0123456789'

punctuation = string.punctuation
# print(punctuation) # !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~

all_characters = letters + digits + punctuation
# print(all_characters) # abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~

# --------------------------------------------------------------------------------------------------- #

### A LOOP IS A CODE BLOCK THAT REPEATS UNTIL A CERTAIN CONDITION IS MET
### IN A for LOOP, THE CONDITION IS BASED ON THE SEQUENCE OVER WHICH WE'RE LOOPING
### IN A WHILE LOOP, WE SET THE CONDITION OVER WHICH WE LOOP
### IT IS UP TO US TO CHANGE A VALUE WITHIN THE 

# while loop
'''
while some_condition == True:
    # loop this code block
    # until 'some_condition'
    # becomes False
'''


# "for x in range(10)" with a while loop
x = 0

while x < 10:
    # print(x)

    # ... other code

    # increment x to eventually make the loop's condition False
    x += 1

# --------------------------------------------------------------------------------------------- #

### 1. INTRODUCE BLANK LIST
### 2. BUILD LOOP USING LIST'S LENGTH
### 3. GENERATE A RANDOM NUMBER EACH LOOP, PRINT IT
### 4. INSTEAD OF PRINTING THE RANDOM NUMBER, ADD IT TO THE LIST

# generate a list of 10 random numbers between 0 and 100

# blank list to store numbers
numbers = []

# loop until there are 10 numbers in the list
while len(numbers) < 10:
    # add a random number to the list
    numbers.append(random.randint(0, 100))

# print(numbers) # [90, 3, 61, 23, 22, 94, 75, 9, 17, 48]

# ------------------------------------------------------------------------------ #

### 1. USE THE LIST OF numbers GENERATED USING THE LOOP ON LINE 61
### 2. REMOVE ONE NUMBER AT A TIME AND PRINT THE LIST AFTER EACH
### 3. WALK THROUGH THE OUTPUT IN THE TERMINAL

# remove one number at time from a list until the list is empty

# generated by the loop on line 52
# print(numbers)

# loop while the list still has numbers in it
while numbers != []:
    # remove one item from the end of the list and save it in a variable
    number = numbers.pop()

    # print(number, numbers)

# -------------------------------------------------------------------------------- #

# loop controls
# else, break, continue

'''
1. BUILD LOOP, print(x)
2. SHOW else AFTER THE LOOP RUNS
3. SHOW THAT CODE BELOW THE LOOP RUNS NO MATTER WHAT, 
       BUT else ONLY RUNS WHEN THE LOOP'S CONDITION BECOMES FALSE
4. SHOW HOW break CAUSES else TO BE SKIPPED
5. SHOW HOW continue CAN BE USED TO SKIP ITERATIONS
'''

for x in range(10):

    if x == 3 or x == 5:
        print(x * '.')
        continue # skip the rest of this iteration and begin the next

    if x == 8:
        print('Goodbye')
        break # end the loop immediately
    
    print(x)

else:
    # else will be triggered
    # if the loop's condition becomes False
    print('The loop made it all the way through!')

print("\nother code ...")
